#!@PYTHON_EXECUTABLE@

import datetime
import optparse
import time
import string
import sys
import os
import subprocess

from hose import hspeclog_module, hinfluxdb_module

#global vars
log_install_dir = "@LOG_INSTALL_DIR@"

################################################################################

def main():
    usage_text = '\n capture-spectrometer-log'

    #create interface and connect to (Westford) data base
    logfilename = os.path.join(log_install_dir, "status.log")
    dbinterface = hinfluxdb_module.wf_influxdb()

    #set up ssh-tail command to grab field system log file lines
    #to change port edit ~/.ssh/config
    command = "tail -f " + logfilename

    print "command = ", command
    tail = subprocess.Popen([command], shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    stripper = hspeclog_module.hstatuslog_stripper()

    run_loop = True
    while run_loop == True:
        line = tail.stdout.readline()
        result_valid = stripper.process_line(line.strip())
        if result_valid is True:
            json_body = stripper.get_data_points()[0]
            print("Write points: {0}".format(json_body))
            dbinterface.client.write_points([json_body], protocol='json')
        if tail.poll() is not None or os.path.isfile(logfilename) is False:
            run_loop = False

    tail.kill()


################################################################################

if __name__ == '__main__':          # official entry point
    main()
    sys.exit(0)
